colnames( TimeRequiredToStartBusinessInDays )[2:3] <- c( "Year" , "TimeRequiredToStartBusinessInDays" )
TimeToPrepareAndPayTaxesHours <- subset( WDI , WDI$Indicator.Code == 'IC.TAX.DURS' )
TimeToPrepareAndPayTaxesHours$Country.Name <- NULL
TimeToPrepareAndPayTaxesHours$Indicator.Name <- NULL
TimeToPrepareAndPayTaxesHours$Indicator.Code <- NULL
TimeToPrepareAndPayTaxesHours <- melt( TimeToPrepareAndPayTaxesHours , id.vars = "Country.Code" )
colnames( TimeToPrepareAndPayTaxesHours )[2:3] <- c( "Year" , "TimeToPrepareAndPayTaxesHours" )
PercentageFirmsExpectedToGiveGifts <- subset( WDI , WDI$Indicator.Code == 'IC.TAX.GIFT.ZS' )
PercentageFirmsExpectedToGiveGifts$Country.Name <- NULL
PercentageFirmsExpectedToGiveGifts$Indicator.Name <- NULL
PercentageFirmsExpectedToGiveGifts$Indicator.Code <- NULL
PercentageFirmsExpectedToGiveGifts <- melt( PercentageFirmsExpectedToGiveGifts , id.vars = "Country.Code" )
colnames( PercentageFirmsExpectedToGiveGifts )[2:3] <- c( "Year" , "PercentageFirmsExpectedToGiveGifts" )
NumberVisitsRequiredMeetingsTaxOfficials <- subset( WDI , WDI$Indicator.Code == 'IC.TAX.METG' )
NumberVisitsRequiredMeetingsTaxOfficials$Country.Name <- NULL
NumberVisitsRequiredMeetingsTaxOfficials$Indicator.Name <- NULL
NumberVisitsRequiredMeetingsTaxOfficials$Indicator.Code <- NULL
NumberVisitsRequiredMeetingsTaxOfficials <- melt( NumberVisitsRequiredMeetingsTaxOfficials , id.vars = "Country.Code" )
colnames( NumberVisitsRequiredMeetingsTaxOfficials )[2:3] <- c( "Year" , "NumberVisitsRequiredMeetingsTaxOfficials" )
ProfitTax <- subset( WDI , WDI$Indicator.Code == 'IC.TAX.PRFT.CP.ZS' )
ProfitTax$Country.Name <- NULL
ProfitTax$Indicator.Name <- NULL
ProfitTax$Indicator.Code <- NULL
ProfitTax <- melt( ProfitTax , id.vars = "Country.Code" )
colnames( ProfitTax )[2:3] <- c( "Year" , "ProfitTax" )
TotalTaxRate <- subset( WDI , WDI$Indicator.Code == 'IC.TAX.TOTL.CP.ZS' )
TotalTaxRate$Country.Name <- NULL
TotalTaxRate$Indicator.Name <- NULL
TotalTaxRate$Indicator.Code <- NULL
TotalTaxRate <- melt( TotalTaxRate , id.vars = "Country.Code" )
colnames( TotalTaxRate )[2:3] <- c( "Year" , "TotalTaxRate" )
StartUpBusinessFactorsData <-
cbind(NoOfProceduresToStartUp ,
BusinessDisclousureIndex ,
EaseOfDoingBusinessIndex  ,
StrengthLegalRights  ,
NewBusinessDensity  ,
NewBusinessRegistered  ,
PowerOutagesInFirmsPerMonth ,
TimeRequiredToGetElectricityDays ,
PercentageFirmsUsingBanksToFinanceWorkingCapital ,
PercentageFirmsUsingBanksToFinanceInvestment ,
PercentageBriberyIncidence ,
PercentageInformalPaymentsToPublicOfficials  ,
PercentageLossesDueToTheft  ,
TimeRequiredToGetOperatingLicenceDays ,
PercentageFirmsWithFemaleTopManager  ,
PercentageFirmsWithFemailOwner ,
PercentageFirmsDoNotReportAllSalesForTax ,
PercentageTimeSpentDealingRequirementsGovernmentRegulations  ,
NumberOfProceduresToEnforceContract  ,
TimeRequiredToRegisterPropertyDays  ,
NumberOfProceduresRegisterProperty  ,
TimeRequiredToStartBusinessInDays  ,
TimeToPrepareAndPayTaxesHours ,
PercentageFirmsExpectedToGiveGifts ,
NumberVisitsRequiredMeetingsTaxOfficials  ,
ProfitTax  ,
TotalTaxRate )
StartUpBusinessFactorsData <- StartUpBusinessFactorsData[,c(1,2,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81)]
ls()
ls()[-21]
ls()
ls()[-21]
rm( list = ls()[-21])
summary( StartUpBusinessFactorsData )
summary( StartUpBusinessFactorsData )
# Grammar of Graphics Plotting Library
library(ggplot2)
substr(StartUpBusinessFactorsData$Year,start = 2 )
substr(StartUpBusinessFactorsData$Year,start = 2 ,stop = nchar(StartUpBusinessFactorsData$Year ) )
substr(StartUpBusinessFactorsData$Year,start = 2 ,stop = nchar( as.character( StartUpBusinessFactorsData$Year )  ) )
StartUpBusinessFactorsData$YearInt <- as.integer(
substr(StartUpBusinessFactorsData$Year,start = 2 ,stop = nchar( as.character( StartUpBusinessFactorsData$Year )  ) ) )
StartUpBusinessFactorsData$Year <- as.integer(
substr(StartUpBusinessFactorsData$Year,start = 2 ,stop = nchar( as.character( StartUpBusinessFactorsData$Year )  ) ) )
StartUpBusinessFactorsDataMelt <- melt( StartUpBusinessFactorsData , id.vars = c( "Country.Code" , "Year"  ) )
View(StartUpBusinessFactorsDataMelt)
View(StartUpBusinessFactorsDataMelt)
ggplot( StartUpBusinessFactorsDataMelt , aes(x = Year, y = variable ) ) +
geom_tile( aes( fill = value ) ) +
scale_fill_gradient( low="yellow", high="red" , labels = comma , name="To Find Missing Data") +
scale_y_discrete(name="KindsOfData") +
theme( legend.position = "none" , axis.text.y= element_blank() )
ggplot( StartUpBusinessFactorsDataMelt , aes(x = Year, y = variable ) )
toFindMissingData <- ggplot( StartUpBusinessFactorsDataMelt , aes(x = Year, y = variable ) )
ggplot( StartUpBusinessFactorsDataMelt , aes(x = Year, y = variable ) ) +
geom_tile( aes( fill = value ) ) +
scale_fill_gradient( low="yellow", high="red" , labels = comma , name="To Find Missing Data") +
scale_y_discrete(name="KindsOfData") +
theme( legend.position = "none" , axis.text.y= element_blank() )
ggplot( StartUpBusinessFactorsDataMelt , aes(x = Year, y = variable ) ) +
geom_tile( aes( fill = value ) ) +
scale_fill_gradient( low="yellow", high="red" , name="To Find Missing Data") +
scale_y_discrete(name="KindsOfData") +
theme( legend.position = "none" , axis.text.y= element_blank() )
?cast
View(StartUpBusinessFactorsData)
StartUpBusinessFactorsData[ StartUpBusinessFactorsData[,2] >2000 ,]
summary(StartUpBusinessFactorsData$Year)
StartUpBusinessFactorsData[StartUpBusinessFactorsData$Year == 2014,]
summary(StartUpBusinessFactorsData)
View(StartUpBusinessFactorsDataMelt)
ggplot( StartUpBusinessFactorsDataMelt , aes(x = Year, y = Country.Code ) ) +
geom_tile( aes( fill = value ) ) +
scale_fill_gradient( low="yellow", high="red" , name="To Find Missing Data") +
scale_y_discrete(name="KindsOfData") +
theme( legend.position = "none" , axis.text.y= element_blank() )
a <- StartUpBusinessFactorsDataMelt[ complete.cases() , ]
a <- StartUpBusinessFactorsDataMelt[ complete.cases(StartUpBusinessFactorsDataMelt) , ]
View(a)
summary(a)
StartUpBusinessFactorsData$YearInt <- NULL
StartUpBusinessFactorsDataMelt <- melt( StartUpBusinessFactorsData , id.vars = c( "Country.Code" , "Year"  ) )
StartUpBusinessFactorsDataMelt <- melt( StartUpBusinessFactorsData , id.vars = c( "Country.Code" , "Year"  ) )
summary(StartUpBusinessFactorsDataMelt)
StartUpBusinessFactorsDataMelt <- melt( StartUpBusinessFactorsData , id.vars = c( "Country.Code" , "Year"  ) )
summary(StartUpBusinessFactorsDataMelt)
a <- StartUpBusinessFactorsDataMelt[ complete.cases(StartUpBusinessFactorsDataMelt) , ]
View(a)
?melt
b <- dcast(data = a , formula = Country.Code ~ Year )
b <- dcast(data = a , aggregate = c("Country.Code" , "Year" ) )
b <- dcast(data = a , formula = value, aggregate = c("Country.Code" , "Year" ) )
View(StartUpBusinessFactorsData)
StartUpBusinessFactorsData1 <- subset( StartUpBusinessFactorsData , is.na( StartUpBusinessFactorsData$NoOfProceduresToStartUp ) == FALSE )
summary(StartUpBusinessFactorsData1)
StartUpBusinessFactorsDataEase <- subset( StartUpBusinessFactorsData1 , is.na( StartUpBusinessFactorsData1$EaseOfDoingBusinessIndex ) == FALSE )
summary(StartUpBusinessFactorsDataEase)
StartUpBusinessFactorsDataEase$NewBusinessDensity =
StartUpBusinessFactorsDataEase$NewBusinessRegistered =
StartUpBusinessFactorsDataEase$PowerOutagesInFirmsPerMonth =
StartUpBusinessFactorsDataEase$PercentageFirmsUsingBanksToFinanceWorkingCapital =
StartUpBusinessFactorsDataEase$PercentageFirmsUsingBanksToFinanceInvestment =
StartUpBusinessFactorsDataEase$PercentageBriberyIncidence =
StartUpBusinessFactorsDataEase$PercentageInformalPaymentsToPublicOfficials =
StartUpBusinessFactorsDataEase$PercentageLossesDueToTheft = NULL
summary( StartUpBusinessFactorsDataEase)
StartUpBusinessFactorsDataEase$TimeRequiredToGetOperatingLicenceDays =
StartUpBusinessFactorsDataEase$PercentageFirmsWithFemaleTopManager =
StartUpBusinessFactorsDataEase$PercentageFirmsWithFemailOwner =
StartUpBusinessFactorsDataEase$PercentageFirmsDoNotReportAllSalesForTax =
StartUpBusinessFactorsDataEase$PercentageTimeSpentDealingRequirementsGovernmentRegulations =
StartUpBusinessFactorsDataEase$TimeRequiredToRegisterPropertyDays =
StartUpBusinessFactorsDataEase$NumberOfProceduresRegisterProperty =
StartUpBusinessFactorsDataEase$PercentageFirmsExpectedToGiveGifts =
StartUpBusinessFactorsDataEase$NumberVisitsRequiredMeetingsTaxOfficials = NULL
summary( StartUpBusinessFactorsDataEase)
colnames( StartUpBusinessFactorsDataEase )
# importing the data
WDI <- read.csv( "Data/WDI_Data.csv" , stringsAsFactors = FALSE )
NoOfProceduresToStartUp <- subset( WDI , WDI$Indicator.Code == 'IC.REG.PROC' )
NoOfProceduresToStartUp$Country.Name <- NULL
NoOfProceduresToStartUp$Indicator.Name <- NULL
NoOfProceduresToStartUp$Indicator.Code <- NULL
NoOfProceduresToStartUp <- melt( NoOfProceduresToStartUp , id.vars = "Country.Code" )
colnames( NoOfProceduresToStartUp )[2:3] <- c( "Year" , "NoOfProceduresToStartUp" )
BusinessDisclousureIndex <- subset( WDI , WDI$Indicator.Code == 'IC.REG.PROC' )
BusinessDisclousureIndex$Country.Name <- NULL
BusinessDisclousureIndex$Indicator.Name <- NULL
BusinessDisclousureIndex$Indicator.Code <- NULL
BusinessDisclousureIndex <- melt( BusinessDisclousureIndex , id.vars = "Country.Code" )
colnames( BusinessDisclousureIndex )[2:3] <- c( "Year" , "BusinessDisclousureIndex" )
EaseOfDoingBusinessIndex <- subset( WDI , WDI$Indicator.Code == 'IC.BUS.EASE.XQ' )
EaseOfDoingBusinessIndex$Country.Name <- NULL
EaseOfDoingBusinessIndex$Indicator.Name <- NULL
EaseOfDoingBusinessIndex$Indicator.Code <- NULL
EaseOfDoingBusinessIndex <- melt( EaseOfDoingBusinessIndex , id.vars = "Country.Code" )
colnames( EaseOfDoingBusinessIndex )[2:3] <- c( "Year" , "EaseOfDoingBusinessIndex" )
StrengthLegalRights <- subset( WDI , WDI$Indicator.Code == 'IC.LGL.CRED.XQ' )
StrengthLegalRights$Country.Name <- NULL
StrengthLegalRights$Indicator.Name <- NULL
StrengthLegalRights$Indicator.Code <- NULL
StrengthLegalRights <- melt( StrengthLegalRights , id.vars = "Country.Code" )
colnames( StrengthLegalRights )[2:3] <- c( "Year" , "StrengthLegalRights" )
TimeRequiredToGetElectricityDays <- subset( WDI , WDI$Indicator.Code == 'IC.ELC.TIME' )
TimeRequiredToGetElectricityDays$Country.Name <- NULL
TimeRequiredToGetElectricityDays$Indicator.Name <- NULL
TimeRequiredToGetElectricityDays$Indicator.Code <- NULL
TimeRequiredToGetElectricityDays <- melt( TimeRequiredToGetElectricityDays , id.vars = "Country.Code" )
colnames( TimeRequiredToGetElectricityDays )[2:3] <- c( "Year" , "TimeRequiredToGetElectricityDays" )
NumberOfProceduresToEnforceContract <- subset( WDI , WDI$Indicator.Code == 'IC.LGL.PROC' )
NumberOfProceduresToEnforceContract$Country.Name <- NULL
NumberOfProceduresToEnforceContract$Indicator.Name <- NULL
NumberOfProceduresToEnforceContract$Indicator.Code <- NULL
NumberOfProceduresToEnforceContract <- melt( NumberOfProceduresToEnforceContract , id.vars = "Country.Code" )
colnames( NumberOfProceduresToEnforceContract )[2:3] <- c( "Year" , "NumberOfProceduresToEnforceContract" )
TimeRequiredToStartBusinessInDays <- subset( WDI , WDI$Indicator.Code == 'IC.REG.DURS' )
TimeRequiredToStartBusinessInDays$Country.Name <- NULL
TimeRequiredToStartBusinessInDays$Indicator.Name <- NULL
TimeRequiredToStartBusinessInDays$Indicator.Code <- NULL
TimeRequiredToStartBusinessInDays <- melt( TimeRequiredToStartBusinessInDays , id.vars = "Country.Code" )
colnames( TimeRequiredToStartBusinessInDays )[2:3] <- c( "Year" , "TimeRequiredToStartBusinessInDays" )
TimeToPrepareAndPayTaxesHours <- subset( WDI , WDI$Indicator.Code == 'IC.TAX.DURS' )
TimeToPrepareAndPayTaxesHours$Country.Name <- NULL
TimeToPrepareAndPayTaxesHours$Indicator.Name <- NULL
TimeToPrepareAndPayTaxesHours$Indicator.Code <- NULL
TimeToPrepareAndPayTaxesHours <- melt( TimeToPrepareAndPayTaxesHours , id.vars = "Country.Code" )
colnames( TimeToPrepareAndPayTaxesHours )[2:3] <- c( "Year" , "TimeToPrepareAndPayTaxesHours" )
ProfitTax <- subset( WDI , WDI$Indicator.Code == 'IC.TAX.PRFT.CP.ZS' )
ProfitTax$Country.Name <- NULL
ProfitTax$Indicator.Name <- NULL
ProfitTax$Indicator.Code <- NULL
ProfitTax <- melt( ProfitTax , id.vars = "Country.Code" )
colnames( ProfitTax )[2:3] <- c( "Year" , "ProfitTax" )
TotalTaxRate <- subset( WDI , WDI$Indicator.Code == 'IC.TAX.TOTL.CP.ZS' )
TotalTaxRate$Country.Name <- NULL
TotalTaxRate$Indicator.Name <- NULL
TotalTaxRate$Indicator.Code <- NULL
TotalTaxRate <- melt( TotalTaxRate , id.vars = "Country.Code" )
colnames( TotalTaxRate )[2:3] <- c( "Year" , "TotalTaxRate" )
rm(list = ls())
# importing the data
WDI <- read.csv( "Data/WDI_Data.csv" , stringsAsFactors = FALSE )
NoOfProceduresToStartUp <- subset( WDI , WDI$Indicator.Code == 'IC.REG.PROC' )
NoOfProceduresToStartUp$Country.Name <- NULL
NoOfProceduresToStartUp$Indicator.Name <- NULL
NoOfProceduresToStartUp$Indicator.Code <- NULL
NoOfProceduresToStartUp <- melt( NoOfProceduresToStartUp , id.vars = "Country.Code" )
colnames( NoOfProceduresToStartUp )[2:3] <- c( "Year" , "NoOfProceduresToStartUp" )
BusinessDisclousureIndex <- subset( WDI , WDI$Indicator.Code == 'IC.REG.PROC' )
BusinessDisclousureIndex$Country.Name <- NULL
BusinessDisclousureIndex$Indicator.Name <- NULL
BusinessDisclousureIndex$Indicator.Code <- NULL
BusinessDisclousureIndex <- melt( BusinessDisclousureIndex , id.vars = "Country.Code" )
colnames( BusinessDisclousureIndex )[2:3] <- c( "Year" , "BusinessDisclousureIndex" )
EaseOfDoingBusinessIndex <- subset( WDI , WDI$Indicator.Code == 'IC.BUS.EASE.XQ' )
EaseOfDoingBusinessIndex$Country.Name <- NULL
EaseOfDoingBusinessIndex$Indicator.Name <- NULL
EaseOfDoingBusinessIndex$Indicator.Code <- NULL
EaseOfDoingBusinessIndex <- melt( EaseOfDoingBusinessIndex , id.vars = "Country.Code" )
colnames( EaseOfDoingBusinessIndex )[2:3] <- c( "Year" , "EaseOfDoingBusinessIndex" )
StrengthLegalRights <- subset( WDI , WDI$Indicator.Code == 'IC.LGL.CRED.XQ' )
StrengthLegalRights$Country.Name <- NULL
StrengthLegalRights$Indicator.Name <- NULL
StrengthLegalRights$Indicator.Code <- NULL
StrengthLegalRights <- melt( StrengthLegalRights , id.vars = "Country.Code" )
colnames( StrengthLegalRights )[2:3] <- c( "Year" , "StrengthLegalRights" )
TimeRequiredToGetElectricityDays <- subset( WDI , WDI$Indicator.Code == 'IC.ELC.TIME' )
TimeRequiredToGetElectricityDays$Country.Name <- NULL
TimeRequiredToGetElectricityDays$Indicator.Name <- NULL
TimeRequiredToGetElectricityDays$Indicator.Code <- NULL
TimeRequiredToGetElectricityDays <- melt( TimeRequiredToGetElectricityDays , id.vars = "Country.Code" )
colnames( TimeRequiredToGetElectricityDays )[2:3] <- c( "Year" , "TimeRequiredToGetElectricityDays" )
NumberOfProceduresToEnforceContract <- subset( WDI , WDI$Indicator.Code == 'IC.LGL.PROC' )
NumberOfProceduresToEnforceContract$Country.Name <- NULL
NumberOfProceduresToEnforceContract$Indicator.Name <- NULL
NumberOfProceduresToEnforceContract$Indicator.Code <- NULL
NumberOfProceduresToEnforceContract <- melt( NumberOfProceduresToEnforceContract , id.vars = "Country.Code" )
colnames( NumberOfProceduresToEnforceContract )[2:3] <- c( "Year" , "NumberOfProceduresToEnforceContract" )
TimeRequiredToStartBusinessInDays <- subset( WDI , WDI$Indicator.Code == 'IC.REG.DURS' )
TimeRequiredToStartBusinessInDays$Country.Name <- NULL
TimeRequiredToStartBusinessInDays$Indicator.Name <- NULL
TimeRequiredToStartBusinessInDays$Indicator.Code <- NULL
TimeRequiredToStartBusinessInDays <- melt( TimeRequiredToStartBusinessInDays , id.vars = "Country.Code" )
colnames( TimeRequiredToStartBusinessInDays )[2:3] <- c( "Year" , "TimeRequiredToStartBusinessInDays" )
TimeToPrepareAndPayTaxesHours <- subset( WDI , WDI$Indicator.Code == 'IC.TAX.DURS' )
TimeToPrepareAndPayTaxesHours$Country.Name <- NULL
TimeToPrepareAndPayTaxesHours$Indicator.Name <- NULL
TimeToPrepareAndPayTaxesHours$Indicator.Code <- NULL
TimeToPrepareAndPayTaxesHours <- melt( TimeToPrepareAndPayTaxesHours , id.vars = "Country.Code" )
colnames( TimeToPrepareAndPayTaxesHours )[2:3] <- c( "Year" , "TimeToPrepareAndPayTaxesHours" )
ProfitTax <- subset( WDI , WDI$Indicator.Code == 'IC.TAX.PRFT.CP.ZS' )
ProfitTax$Country.Name <- NULL
ProfitTax$Indicator.Name <- NULL
ProfitTax$Indicator.Code <- NULL
ProfitTax <- melt( ProfitTax , id.vars = "Country.Code" )
colnames( ProfitTax )[2:3] <- c( "Year" , "ProfitTax" )
TotalTaxRate <- subset( WDI , WDI$Indicator.Code == 'IC.TAX.TOTL.CP.ZS' )
TotalTaxRate$Country.Name <- NULL
TotalTaxRate$Indicator.Name <- NULL
TotalTaxRate$Indicator.Code <- NULL
TotalTaxRate <- melt( TotalTaxRate , id.vars = "Country.Code" )
colnames( TotalTaxRate )[2:3] <- c( "Year" , "TotalTaxRate" )
ls
ls()
StartUpBusinessFactorsData <-
cbind( BusinessDisclousureIndex  ,          EaseOfDoingBusinessIndex           ,
NoOfProceduresToStartUp    ,         NumberOfProceduresToEnforceContract,
ProfitTax                   ,        StrengthLegalRights                ,
TimeRequiredToGetElectricityDays ,   TimeRequiredToStartBusinessInDays  ,
TimeToPrepareAndPayTaxesHours     ,  TotalTaxRate                       ,
WDI   )
StartUpBusinessFactorsData <-
cbind( BusinessDisclousureIndex  ,          EaseOfDoingBusinessIndex           ,
NoOfProceduresToStartUp    ,         NumberOfProceduresToEnforceContract,
ProfitTax                   ,        StrengthLegalRights                ,
TimeRequiredToGetElectricityDays ,   TimeRequiredToStartBusinessInDays  ,
TimeToPrepareAndPayTaxesHours     ,  TotalTaxRate                       )
ncol(StartUpBusinessFactorsData)
StartUpBusinessFactorsData <- StartUpBusinessFactorsData[,c(1,2,3,6,9,12,15,18,21,24,27,30)]
summary( StartUpBusinessFactorsData )
ls()
ls()[-6]
rm( list = ls()[-6])
StartUpBusinessFactorsData1 <- StartUpBusinessFactorsData[complete.cases(StartUpBusinessFactorsData),]
StartUpBusinessFactorsData <- StartUpBusinessFactorsData[complete.cases(StartUpBusinessFactorsData),]
rm( StartUpBusinessFactorsData1)
summary( StartUpBusinessFactorsData )
StartUpBusinessFactorsData$Year <- as.integer(
substr(StartUpBusinessFactorsData$Year,start = 2 ,stop = nchar( as.character( StartUpBusinessFactorsData$Year )  ) ) )
modelNoOfProcedures <- lm( NoOfProceduresToStartUp ~ . , data = StartUpBusinessFactorsData )
summary(modelNoOfProcedures)
modelNoOfProcedures <- lm( NoOfProceduresToStartUp ~ . -Country.Code , data = StartUpBusinessFactorsData )
summary(modelNoOfProcedures)
cor(SStartUpBusinessFactorsData)
cor(StartUpBusinessFactorsData)
cor(StartUpBusinessFactorsData)
cor(StartUpBusinessFactorsData[3:ncol(StartUpBusinessFactorsData)])
StartUpBusinessFactorsData$BusinessDisclousureIndex <- NULL
modelNoOfProcedures <- lm( NoOfProceduresToStartUp ~ . -Country.Code , data = StartUpBusinessFactorsData )
summary(modelNoOfProcedures)
StartUpBusinessFactorsData$Country.Code
table( StartUpBusinessFactorsData$Country.Code )
table( StartUpBusinessFactorsData$Year )
countries <- read.csv( "Data/WDI_Country.csv" )
countries <- read.csv( "Data/WDI_Country.csv" )
countries <- read.csv( "Data/WDI_Country.csv" , fileEncoding="latin1")
View(countries)
countries[ c(1,2), ]
c<- countries[ c(1,2,8,9,22), ]
c<- countries[ , c(1,2,8,9,22)]
countries<- countries[ , c(1,2,8,9,22)]
rm(c)
StartUpCountryData <- merge( StartUpBusinessFactorsData , countries , by="Country.Code")
modelNoOfProcedures <- lm(
NoOfProceduresToStartUp ~ . -Country.Code ,
data = StartUpBusinessFactorsData )
summary(modelNoOfProcedures)
modelNoOfProcedures <- lm(
NoOfProceduresToStartUp ~ . -Country.Code ,
data = StartUpCountryData )
summary(modelNoOfProcedures)
# importing the data
WDI <- read.csv( "Data/WDI_Data.csv" , stringsAsFactors = FALSE )
NoOfProceduresToStartUp <- subset( WDI , WDI$Indicator.Code == 'IC.REG.PROC' )
NoOfProceduresToStartUp$Country.Name <- NULL
NoOfProceduresToStartUp$Indicator.Name <- NULL
NoOfProceduresToStartUp$Indicator.Code <- NULL
NoOfProceduresToStartUp <- melt( NoOfProceduresToStartUp , id.vars = "Country.Code" )
colnames( NoOfProceduresToStartUp )[2:3] <- c( "Year" , "NoOfProceduresToStartUp" )
EaseOfDoingBusinessIndex <- subset( WDI , WDI$Indicator.Code == 'IC.BUS.EASE.XQ' )
EaseOfDoingBusinessIndex$Country.Name <- NULL
EaseOfDoingBusinessIndex$Indicator.Name <- NULL
EaseOfDoingBusinessIndex$Indicator.Code <- NULL
EaseOfDoingBusinessIndex <- melt( EaseOfDoingBusinessIndex , id.vars = "Country.Code" )
colnames( EaseOfDoingBusinessIndex )[2:3] <- c( "Year" , "EaseOfDoingBusinessIndex" )
StrengthLegalRights <- subset( WDI , WDI$Indicator.Code == 'IC.LGL.CRED.XQ' )
StrengthLegalRights$Country.Name <- NULL
StrengthLegalRights$Indicator.Name <- NULL
StrengthLegalRights$Indicator.Code <- NULL
StrengthLegalRights <- melt( StrengthLegalRights , id.vars = "Country.Code" )
colnames( StrengthLegalRights )[2:3] <- c( "Year" , "StrengthLegalRights" )
TimeRequiredToGetElectricityDays <- subset( WDI , WDI$Indicator.Code == 'IC.ELC.TIME' )
TimeRequiredToGetElectricityDays$Country.Name <- NULL
TimeRequiredToGetElectricityDays$Indicator.Name <- NULL
TimeRequiredToGetElectricityDays$Indicator.Code <- NULL
TimeRequiredToGetElectricityDays <- melt( TimeRequiredToGetElectricityDays , id.vars = "Country.Code" )
colnames( TimeRequiredToGetElectricityDays )[2:3] <- c( "Year" , "TimeRequiredToGetElectricityDays" )
NumberOfProceduresToEnforceContract <- subset( WDI , WDI$Indicator.Code == 'IC.LGL.PROC' )
NumberOfProceduresToEnforceContract$Country.Name <- NULL
NumberOfProceduresToEnforceContract$Indicator.Name <- NULL
NumberOfProceduresToEnforceContract$Indicator.Code <- NULL
NumberOfProceduresToEnforceContract <- melt( NumberOfProceduresToEnforceContract , id.vars = "Country.Code" )
colnames( NumberOfProceduresToEnforceContract )[2:3] <- c( "Year" , "NumberOfProceduresToEnforceContract" )
TimeRequiredToStartBusinessInDays <- subset( WDI , WDI$Indicator.Code == 'IC.REG.DURS' )
TimeRequiredToStartBusinessInDays$Country.Name <- NULL
TimeRequiredToStartBusinessInDays$Indicator.Name <- NULL
TimeRequiredToStartBusinessInDays$Indicator.Code <- NULL
TimeRequiredToStartBusinessInDays <- melt( TimeRequiredToStartBusinessInDays , id.vars = "Country.Code" )
colnames( TimeRequiredToStartBusinessInDays )[2:3] <- c( "Year" , "TimeRequiredToStartBusinessInDays" )
TimeToPrepareAndPayTaxesHours <- subset( WDI , WDI$Indicator.Code == 'IC.TAX.DURS' )
TimeToPrepareAndPayTaxesHours$Country.Name <- NULL
TimeToPrepareAndPayTaxesHours$Indicator.Name <- NULL
TimeToPrepareAndPayTaxesHours$Indicator.Code <- NULL
TimeToPrepareAndPayTaxesHours <- melt( TimeToPrepareAndPayTaxesHours , id.vars = "Country.Code" )
colnames( TimeToPrepareAndPayTaxesHours )[2:3] <- c( "Year" , "TimeToPrepareAndPayTaxesHours" )
ProfitTax <- subset( WDI , WDI$Indicator.Code == 'IC.TAX.PRFT.CP.ZS' )
ProfitTax$Country.Name <- NULL
ProfitTax$Indicator.Name <- NULL
ProfitTax$Indicator.Code <- NULL
ProfitTax <- melt( ProfitTax , id.vars = "Country.Code" )
colnames( ProfitTax )[2:3] <- c( "Year" , "ProfitTax" )
TotalTaxRate <- subset( WDI , WDI$Indicator.Code == 'IC.TAX.TOTL.CP.ZS' )
TotalTaxRate$Country.Name <- NULL
TotalTaxRate$Indicator.Name <- NULL
TotalTaxRate$Indicator.Code <- NULL
TotalTaxRate <- melt( TotalTaxRate , id.vars = "Country.Code" )
colnames( TotalTaxRate )[2:3] <- c( "Year" , "TotalTaxRate" )
StartUpBusinessFactorsData <-
cbind( EaseOfDoingBusinessIndex           ,
NoOfProceduresToStartUp    ,         NumberOfProceduresToEnforceContract,
ProfitTax                   ,        StrengthLegalRights                ,
TimeRequiredToGetElectricityDays ,   TimeRequiredToStartBusinessInDays  ,
TimeToPrepareAndPayTaxesHours     ,  TotalTaxRate                       )
StartUpBusinessFactorsData <- StartUpBusinessFactorsData[,c(1,2,3,6,9,12,15,18,21,24,27)]
ls()
rm( EaseOfDoingBusinessIndex , NoOfProceduresToStartUp , NumberOfProceduresToEnforceContract ,
ProfitTax, StrengthLegalRights , TimeRequiredToGetElectricityDays ,
TimeRequiredToStartBusinessInDays , TimeToPrepareAndPayTaxesHours , TotalTaxRate, WDI)
StartUpBusinessFactorsData <- StartUpBusinessFactorsData[complete.cases(StartUpBusinessFactorsData),]
StartUpBusinessFactorsData$Year <- as.integer(
substr(StartUpBusinessFactorsData$Year,start = 2 ,stop = nchar( as.character( StartUpBusinessFactorsData$Year )  ) ) )
StartUpCountryData <- merge( StartUpBusinessFactorsData , countries , by="Country.Code")
modelNoOfProcedures <- lm(
NoOfProceduresToStartUp ~ . -Country.Code ,
data = StartUpCountryData )
summary(modelNoOfProcedures)
countries <- read.csv( "Data/WDI_Country.csv" , fileEncoding="latin1")
ggplot( train, aes( x = NoOfProceduresToStartUp ) ) +
geom_histogram( ) +
# Vertical line indicating the mean value
geom_vline( aes( xintercept = mean( NoOfProceduresToStartUp ) ), color="red" ) +
scale_y_continuous( "Frequency of Occurance" ) +
scale_x_continuous( "No of Procedures To Start Up" )
ggplot( StartUpCountryData, aes( x = NoOfProceduresToStartUp ) ) +
geom_histogram( ) +
# Vertical line indicating the mean value
geom_vline( aes( xintercept = mean( NoOfProceduresToStartUp ) ), color="red" ) +
scale_y_continuous( "Frequency of Occurance" ) +
scale_x_continuous( "No of Procedures To Start Up" )
( max( StartUpCountryData$NoOfProceduresToStartUp ) - min( StartUpCountryData$NoOfProceduresToStartUp ) )/30
ggplot( StartUpCountryData, aes( x = NoOfProceduresToStartUp ) ) +
geom_histogram( binwidth=.4) +
# Vertical line indicating the mean value
geom_vline( aes( xintercept = mean( NoOfProceduresToStartUp ) ), color="red" ) +
scale_y_continuous( "Frequency of Occurance" ) +
scale_x_continuous( "No of Procedures To Start Up" )
ggplot(data=StartUpCountryData,
aes(x=Region, y=NoOfProceduresToStartUp, fill=Region) ) +
geom_boxplot(outlier.shape = 15, outlier.size = 4) +
# to show how the individual store sizes are distributed
geom_jitter() +
scale_y_continuous( name="No of Procedures To Start Up" ) +
scale_fill_brewer( name = "Region" , palette = "Dark2")
summary(StartUpCountryData$Region)
StartUpCountryData[, StartUpCountryData$Region=='']
summary(StartUpCountryData$Region)
ggplot(data=StartUpCountryData,
aes(x=Income.Group, y=NoOfProceduresToStartUp, fill=Income.Group) ) +
geom_boxplot(outlier.shape = 15, outlier.size = 4) +
# to show how the individual store sizes are distributed
geom_jitter() +
scale_y_continuous( name="No of Procedures To Start Up" ) +
scale_fill_brewer( name = "Region" , palette = "Dark2")
Hyp_NotOECD <- subset( StartUpCountryData , Region != 'High income: OECD' )
Hyp_OECD <- subset( StartUpCountryData , Region == 'High income: OECD' )
table( StartUpCountryData$Income.Group)
Hyp_NotOECD <- subset( StartUpCountryData , Income.Group != 'High income: OECD' )
Hyp_OECD <- subset( StartUpCountryData , Income.Group == 'High income: OECD' )
pnorm(-2.875818)
View(StartUpCountryData)
library(caTools)
setwd( "../KaggleWalmart/")
set.seed( 314 )
split <- sample.split( StartUpCountryData$NoOfProceduresToStartUp ,SplitRatio = .8 )
train <- subset( StartUpCountryData , split == TRUE )
test <- subset( StartUpCountryData , split == FALSE )
WDI <- read.csv( "Data/WDI_Data.csv" , stringsAsFactors = FALSE )
set.seed( 314 )
split <- sample.split( StartUpCountryData$NoOfProceduresToStartUp ,SplitRatio = .8 )
train <- subset( StartUpCountryData , split == TRUE )
test <- subset( StartUpCountryData , split == FALSE )
modelNoOfProcedures <- lm(
NoOfProceduresToStartUp ~ . -Country.Code ,
data = train )
summary(modelNoOfProcedures)
View(countries)
modelNoOfProcedures <- lm(
NoOfProceduresToStartUp ~ . -Country.Code -Short.Name ,
data = train )
summary( modelNoOfProcedures )
test$predictedNoOfProcedures <- predict( modelNoOfProcedures , newdata = test )
modelNoOfProcedures <- lm(
NoOfProceduresToStartUp ~ . -Country.Code -Short.Name ,
data = train )
summary( modelNoOfProcedures )
test$predictedNoOfProcedures <- predict( modelNoOfProcedures , newdata = test )
summary( modelNoOfProcedures )
modelNoOfProcedures <- lm(
NoOfProceduresToStartUp ~ . -Country.Code -Short.Name ,
data = train )
test$predictedNoOfProcedures <- predict( modelNoOfProcedures , newdata = test )
test$predictedNoOfProcedures <- predict( modelNoOfProcedures , newdata = test )
set.seed( 314 )
split <- sample.split( StartUpCountryData$NoOfProceduresToStartUp ,SplitRatio = .8 )
train <- subset( StartUpCountryData , split == TRUE )
test <- subset( StartUpCountryData , split == FALSE )
modelNoOfProcedures <- lm(
NoOfProceduresToStartUp ~ . -Country.Code -Short.Name ,
data = train )
test$predictedNoOfProcedures <- predict( modelNoOfProcedures , newdata = test )
modelNoOfProcedures <- lm(
formula = NoOfProceduresToStartUp ~ . -Country.Code -Short.Name ,
data = train )
summary( modelNoOfProcedures )
test$predictedNoOfProcedures <- predict( modelNoOfProcedures , newdata = test )
StartUpCountryData$Country.Code <- as.character( StartUpCountryData$Country.Code )
set.seed( 314 )
split <- sample.split( StartUpCountryData$NoOfProceduresToStartUp ,SplitRatio = .8 )
train <- subset( StartUpCountryData , split == TRUE )
test <- subset( StartUpCountryData , split == FALSE )
modelNoOfProcedures <- lm(
formula = NoOfProceduresToStartUp ~ . -Country.Code -Short.Name ,
data = train )
summary( modelNoOfProcedures )
test$predictedNoOfProcedures <- predict( modelNoOfProcedures , newdata = test )
WDI <- read.csv( "Data/WDI_Data.csv" , stringsAsFactors = FALSE )
WDI <- read.csv( "Data/WDI_Data.csv" , stringsAsFactors = FALSE )
setwd("../WorldBankWDI/")
WDI <- read.csv( "Data/WDI_Data.csv" , stringsAsFactors = FALSE )
summary( modelNoOfProcedures )
